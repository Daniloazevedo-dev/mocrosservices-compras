name: Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  tests:
    name: Run Unit Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      - name: Build with Maven
        run: mvn -B test --file ./compra/pom.xml

  build:
    needs: tests
    name: Build maven package
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('./compra/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-
      - name: Build package war
        run: mvn -B package -DskipTests --file ./compra/pom.xml
      - name: Upload .war
        uses: actions/upload-artifact@v2
        with:
          name: artifact
          path: ./compra/target/app.war
  deploy:
    needs: build
    name: Deploy on AWS Elastic Beanstalk
    runs-on: ubuntu-latest
    steps:
      - name: Download war
        uses: actions/download-artifact@v2
        with:
          name: artifact
      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: "us-east-1"
      - name: Create AWS Elastic Beanstalk Environment
        run: |
          aws elasticbeanstalk create-environment \
            --application-name app-spring-boot \
            --environment-name app-spring-boot-env \
            --solution-stack-name "64bit Amazon Linux 2 v5.4.6 running Corretto 11"
      - name: Deploy to AWS Elastic Beanstalk
        run: |
          aws elasticbeanstalk create-environment \
            --application-name app-spring-boot \
            --environment-name app-spring-boot-env \
            --version-label ${{ github.sha }}
